import React, { Component } from "react";
import { ChildComp } from "./childcomp";
class App extends Component{
    state = {
        show : true,
        version : 101
    }
    constructor(){
        super();
        console.log("App Component's Constructer was called");
    }
    render(){
        console.log("App Component's Render was called");
        return <div className="container">
                   <h2>User Registeration Form Version : { this.state.version }</h2>
                   <label htmlFor="">Show / Hide</label>
                   <input type="checkbox" onChange={() => this.setState({ show : !this.state.show})} />
                   <br />
                   <button onClick={()=> this.setState({ version : Math.round( Math.random() * 1000 )})}>Change Version</button>
                  { this.state.show ?  <ChildComp ver={this.state.version} /> : <p>child is hidden</p> }
               </div>
    }
    componentDidMount(){
        console.log("App Component's componentDidMount was called");
    }
};
export default App;

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

import { Component } from "react";
import { NestedChild } from "./nestedchild";

export class ChildComp extends Component{
    state = {
        compversion : 0
    }
    constructor(){
        super();
        console.log("ChildComp Component's Constructer was called");
        // this.state.compversion = 10;
    }
    static getDerivedStateFromProps(compprops, compstate){
        // console.log(arguments[0], arguments[1])
        return {
            compversion : compprops.ver * 2
        }
    }
    shouldComponentUpdate(compprops, compstate){
        // console.log(arguments[0], arguments[1])
        if(compprops.ver > 500){
            return false
        }else{
            return true
        }
    }
    render(){
       
        console.log("ChildComp Component's Render was called");
        return <div>
                    <h3> Child Component </h3>
                    <h5>Version {this.props.ver}</h5>
                    <h5>Comp Version {this.state.compversion}</h5>
                    <button onClick={() => this.props.ver = 100 }>Change Parent's Version</button>
                    <NestedChild/>
                </div>
    }
    componentDidMount(){
        console.log("ChildComp Component's componentDidMount was called");
    }
    componentWillUnmount(){
        console.log("ChildComp Component's componentWillUnmount was called");
    }
    componentDidUpdate(){
        console.log("ChildComp Component's componentDidUpdate was called");
    }
}

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

import { Component } from "react";

export class NestedChild extends Component{
    constructor(){
        super();
        console.log("NestedChild Component's Constructer was called");
    }
    render(){
        console.log("NestedChild Component's Render was called");
        return <div>
                    <h4>
                        Nested Child Component
                    </h4>
                </div>
    }

    componentDidMount(){
        console.log("NestedChild Component's componentDidMount was called");
    }
    componentWillUnmount(){
        console.log("NestedChild Component's componentWillUnmount was called");
    }

    componentDidUpdate(){
        console.log("NestedChild Component's componentDidUpdate was called");
    }

}
